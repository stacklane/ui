@import '/utils';


@mixin control {
  appearance: none;
  border: 0;
  justify-content: flex-start;
  display: inline-flex;
  align-items: center;
  position: relative;
  vertical-align: top;

  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }

  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    outline: none;
  }

  // TODO vars
  height: 2.5em;
  line-height: 1.5;
  font-size: 1rem;
}


%control {
  @include control;
}


/**
 * https://uxmovement.com/mobile/optimal-size-and-spacing-for-mobile-buttons/
 */
ui-button, ui-menu-button{
  @extend %control;
  @extend %unselectable;

  --ui-button-backround: inherit;
  --ui-button-label: inherit;
  --ui-button-radius: var(--ui-radius);
  --ui-button-weight: var(--ui-weight-normal);
  --ui-button-padding-horizontal: var(--ui-s-spacing);
  --ui-button-padding-vertical: calc(var(--ui-button-padding-horizontal)/2);
  --ui-button-hover: var(--ui-selection-background);

  justify-content: center;
  text-align: center;
  white-space: nowrap;

  cursor: var(--ui-action-pointer);

  background: var(--ui-button-backround);
  color: var(--ui-button-label);
  border-radius: var(--ui-button-radius);
  font-weight: var(--ui-button-weight);
  padding: var(--ui-button-padding-vertical) var(--ui-button-padding-horizontal);

  &:hover{
    background: var(--ui-button-hover);
  }

  &:active {
    // in any case, this will break ui-menu-button: filter: brightness(1.25); // ?
  }

  &[disabled] {
    filter: brightness(.25); // opacity instead?
    pointer-events: none !important;
    cursor: not-allowed !important;
  }

  ui-icon{
    --ui-icon-size: 1.5em;
  }
}

ui-menu-button{
  position: relative;

  --ui-menu-background: var(--ui-secondary-background);
  --ui-menu-label: var(--ui-label);
  --ui-menu-hover-background: var(--ui-link);
  --ui-menu-hover-label: var(--ui-link-invert);
  --ui-menu-shadow: var(--ui-secondary-background-shadow);
  --ui-menu-speed: var(--ui-speed);

  .menu{
    display: flex;
    flex-direction: row; // for each 'ul'
    position: absolute;
    background: var(--ui-menu-background);
    color: var(--ui-menu-label);
    left: 0;
    top: 100%; // bottom of parent
    min-width: 100%; // at least as wide as parent
    //box-shadow: 0 8px 8px var(--ui-menu-shadow), 0 0 0 1px var(--ui-menu-shadow);
    box-shadow: 0 0.5em 1em -0.125em var(--ui-menu-shadow), 0 0px 0 1px var(--ui-menu-shadow);
    transition-property: opacity,transform;
    transition-duration: var(--ui-menu-speed);
    z-index: -9999; // while hidden
    pointer-events: none; // while hidden
    opacity:0;
    transform: translateY(-5px);

    /**
     * A series of ul's may be placed within an .action
     */
    > ul{
      flex-grow: 1;
      text-align:left;

      > li{
        cursor: var(--ui-action-pointer);
        padding: var(--ui-2xs-spacing) var(--ui-spacing);

        &:hover{
          background: var(--ui-menu-hover-background);
          color: var(--ui-menu-hover-label);
        }

        &.is-action-add:before{
          content: '+ ';
          font-weight: var(--ui-weight-max);
        }
        &.is-action-delete:before{
          content: 'Ã— ';
          font-weight: var(--ui-weight-max);
        }
      }

      + ul{
        border-left: 1px solid var(--ui-separator);
      }
    }
  }

  //&:hover {
  //  background: var(--ui-selection);
  // }

  &:focus, &:focus-within{
    background: var(--ui-button-hover);

    .menu{
      pointer-events: auto;
      opacity: 1;
      transform: translateY(0);
      z-index: 9999;
    }
  }
}
