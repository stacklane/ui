@import '/utils';

/**
 * Sidebar/drawer as main application layout.
 *
 * As a main layout, it's not intended to be nested.
 *
 * This approach uses margin-left to animate the sidebar.
 * This looks nice, and works well with the flex layout,
 * however it does require a known drawer width (--ui-drawer-width).
 */

:root {
  --ui-drawer-width: 240px; // or 250
  --ui-drawer-background: var(--ui-secondary-background);
  --ui-drawer-label: var(--ui-label);
}

//ui-drawer-app-around{
//  display: flex;
//  flex: 1 1 auto;
//  flex-direction: column;
//}

@mixin ui-drawer-is-opened {
  ui-drawer {
    margin-left: 0px;
  }
  .is-hidden-when-drawer-opened{
    display: none;
  }
  .is-hidden-when-drawer-closed{
    display: inherit;
  }
  ui-drawer-overlay{
    display: block;
  }
  ui-drawer-main{
    pointer-events: none;
  }
  @include tablet(){
    ui-drawer-overlay{
      display: none;
    }
    ui-drawer-main{
      pointer-events: all;
    }
  }
}

@mixin ui-drawer-is-closed {
  ui-drawer {
    margin-left: calc(-1 * var(--ui-drawer-width));
  }
  .is-hidden-when-drawer-opened{
    display: inherit;
  }
  .is-hidden-when-drawer-closed{
    display: none;
  }
  ui-drawer-overlay{
    display:none;
  }
}

ui-drawer-layout{
  display: flex;
  flex: 1 1 0px;
  position:relative;
  z-index: 1;

  ui-drawer-overlay{
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    background: rgba(0,0,0,0.5);
    z-index: 2;
  }

  /**
   * May contain a <ui-appbar> to match height of any toolbar this is next to.
   */
  ui-drawer{
    // not good for popup menus which are wider than sidebar: overflow: hidden;

    background: var(--ui-drawer-background);
    color: var(--ui-drawer-label);
    flex: 0 0 auto;
    flex-direction: column;
    transition: margin-left var(--ui-speed) ease-out, transform var(--ui-speed) ease-out;

    width: var(--ui-drawer-width);

    z-index: 3;

    position: fixed;
    bottom: 0;
    top: 0;
  }

  @include ui-drawer-is-closed();

  > ui-drawer-main{
    display: flex;
    flex: 1;
    flex-direction: column;
    position: relative;
    z-index: 1;
    overflow: hidden;
  }

  @include tablet{
    @include ui-drawer-is-opened();
  }

  @include tablet {
    ui-drawer {
      position: relative;
    }
  }

  /**
   * Manually/explicitly opened.
   */
  &.is-opened{
    @include ui-drawer-is-opened();
  }

  /**
   * Manually/explicitly closed.
   */
  &.is-closed{
    @include ui-drawer-is-closed();
  }

  .is-something{
    //display: initial;
  }

  //&.is-opened{
    @include tablet{
      .is-something {
        display: none;
      }
    }
 // }

  /**
   * .is-mobile-nav -- alternative navigation:
   *
   * - Displays always when screen < tablet
   * - Forces display if drawer manually closed and screen > tablet
   *   (otherwise there would be no navigation displayed)
   */
  .is-drawer-mobile-nav{
    @include tablet{
      display: none;
    }
  }

  &.is-closed{
    .is-drawer-mobile-nav {
      @include tablet {
        display: initial;
      }
    }
  }


}
